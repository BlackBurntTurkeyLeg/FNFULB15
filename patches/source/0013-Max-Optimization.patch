From fc6f3aca23d5dc3a24612bb0ec6425fdd1009d87 Mon Sep 17 00:00:00 2001
From: l1ttleO <l1ttleofficial@outlook.com>
Date: Tue, 5 Jul 2022 23:41:29 +0500
Subject: [PATCH] Add graphical options for hiding sprites and characters

---
 source/ClientPrefs.hx                      | 20 ++++++++++++
 source/FunkinLua.hx                        |  2 +-
 source/PlayState.hx                        | 36 ++++++++++++++++++++--
 source/options/GraphicsSettingsSubState.hx | 28 +++++++++++++++++
 4 files changed, 82 insertions(+), 4 deletions(-)

diff --git a/source/ClientPrefs.hx b/source/ClientPrefs.hx
index 46eff0a..b3d20aa 100644
--- a/source/ClientPrefs.hx
+++ b/source/ClientPrefs.hx
@@ -73,6 +73,10 @@ class ClientPrefs {
 	public static var advancedScoreTxt:Bool = true;
 	public static var scoreTxtUnderlayOpacity:Float = 0.3;
 	public static var healthBarType:String = 'Horizontal';
+	public static var hideAllSprites:Bool = false;
+	public static var hideOpponent:Bool = false;
+	public static var hideGf:Bool = false;
+	public static var hideBf:Bool = false;
 
 	//Every key has two binds, add your key bind down here and then add your control on options/ControlsSubState.hx and Controls.hx
 	public static var keyBinds:Map<String, Array<FlxKey>> = [
@@ -155,6 +159,10 @@ class ClientPrefs {
 		FlxG.save.data.advancedScoreTxt = advancedScoreTxt;
 		FlxG.save.data.scoreTxtUnderlayOpacity = scoreTxtUnderlayOpacity;
 		FlxG.save.data.healthBarType = healthBarType;
+		FlxG.save.data.hideAllSprites = hideAllSprites;
+		FlxG.save.data.hideOpponent = hideOpponent;
+		FlxG.save.data.hideGf = hideGf;
+		FlxG.save.data.hideBf = hideBf;
 	
 		FlxG.save.flush();
 
@@ -308,6 +316,18 @@ class ClientPrefs {
 		if(FlxG.save.data.healthBarType != null) {
 			healthBarType = FlxG.save.data.healthBarType;
 		}
+		if(FlxG.save.data.hideAllSprites != null) {
+			hideAllSprites = FlxG.save.data.hideAllSprites;
+		}
+		if(FlxG.save.data.hideOpponent != null) {
+			hideOpponent = FlxG.save.data.hideOpponent;
+		}
+		if(FlxG.save.data.hideGf != null) {
+			hideGf = FlxG.save.data.hideGf;
+		}
+		if(FlxG.save.data.hideBf != null) {
+			hideBf = FlxG.save.data.hideBf;
+		}
 		
 		// flixel automatically saves your volume!
 		if(FlxG.save.data.volume != null)
diff --git a/source/FunkinLua.hx b/source/FunkinLua.hx
index bdde794..b160b30 100644
--- a/source/FunkinLua.hx
+++ b/source/FunkinLua.hx
@@ -188,7 +188,7 @@ class FunkinLua {
 		set('noteOffset', ClientPrefs.noteOffset);
 		set('healthBarAlpha', ClientPrefs.healthBarAlpha);
 		set('noResetButton', ClientPrefs.noReset);
-		set('lowQuality', ClientPrefs.lowQuality);
+		set('lowQuality', ClientPrefs.lowQuality || ClientPrefs.hideAllSprites);
 		set('scriptName', scriptName);
 
 		#if windows
diff --git a/source/PlayState.hx b/source/PlayState.hx
index 04b6a2c..8c86810 100644
--- a/source/PlayState.hx
+++ b/source/PlayState.hx
@@ -224,6 +224,7 @@ class PlayState extends MusicBeatState
 	public var camHUD:FlxCamera;
 	public var camGame:FlxCamera;
 	public var camOther:FlxCamera;
+	public var camChars:FlxCamera; // Special camera for characters
 	public var cameraSpeed:Float = 1;
 
 	var dialogue:Array<String> = ['blah blah blah', 'coolswag'];
@@ -329,9 +330,11 @@ class PlayState extends MusicBeatState
 
 	var precacheList:Map<String, String> = new Map<String, String>();
 
+	private var oldLQ:Bool = ClientPrefs.lowQuality; // Avoids loading things into RAM that won't be rendered
 	override public function create()
 	{
 		Paths.clearStoredMemory();
+		if (ClientPrefs.hideAllSprites) ClientPrefs.lowQuality = true;
 
 		// for lua
 		instance = this;
@@ -406,10 +409,17 @@ class PlayState extends MusicBeatState
 		camGame = new FlxCamera();
 		camHUD = new FlxCamera();
 		camOther = new FlxCamera();
+		camChars = new FlxCamera();
 		camHUD.bgColor.alpha = 0;
 		camOther.bgColor.alpha = 0;
+		camChars.bgColor.alpha = 0;
 
 		FlxG.cameras.reset(camGame);
+		if (ClientPrefs.hideAllSprites) {
+			FlxG.cameras.add(camChars);
+			FlxG.camera = camChars;
+			camChars.alpha = 0;
+		}
 		FlxG.cameras.add(camHUD);
 		FlxG.cameras.add(camOther);
 		grpNoteSplashes = new FlxTypedGroup<NoteSplash>();
@@ -2120,6 +2130,10 @@ class PlayState extends MusicBeatState
 								countdownReady.destroy();
 							}
 						});
+						if (ClientPrefs.hideAllSprites) switchObjectState(camGame, false);
+						if (ClientPrefs.hideOpponent) switchObjectState(dad, false);
+						if (ClientPrefs.hideGf) switchObjectState(gf, false);
+						if (ClientPrefs.hideBf) switchObjectState(boyfriend, false);
 						FlxG.sound.play(Paths.sound('intro2' + introSoundsSuffix), 0.6);
 					case 2:
 						countdownSet = new FlxSprite().loadGraphic(Paths.image(introAlts[1]));
@@ -2141,6 +2155,12 @@ class PlayState extends MusicBeatState
 							}
 						});
 						FlxG.sound.play(Paths.sound('intro1' + introSoundsSuffix), 0.6);
+						if (ClientPrefs.hideAllSprites) {
+							gf.cameras = [camChars];
+							dad.cameras = [camChars];
+							boyfriend.cameras = [camChars];
+							switchObjectState(camChars, true);
+						}
 					case 3:
 						countdownGo = new FlxSprite().loadGraphic(Paths.image(introAlts[2]));
 						countdownGo.cameras = [camHUD];
@@ -3669,7 +3689,7 @@ class PlayState extends MusicBeatState
 
 			case 'Screen Shake':
 				var valuesArray:Array<String> = [value1, value2];
-				var targetsArray:Array<FlxCamera> = [camGame, camHUD];
+				var targetsArray:Array<FlxCamera> = [camGame, camHUD, camChars];
 				for (i in 0...targetsArray.length) {
 					var split:Array<String> = valuesArray[i].split(',');
 					var duration:Float = 0;
@@ -3829,6 +3849,7 @@ class PlayState extends MusicBeatState
 		if (direction.endsWith("RIGHT")) addX += ClientPrefs.cameraMoveIntensity;
 		if(isDad)
 		{
+			if (ClientPrefs.hideOpponent) return;
 			camFollow.set(dad.getMidpoint().x + 150, dad.getMidpoint().y - 100);
 			camFollow.x += dad.cameraPosition[0] + opponentCameraOffset[0] + addX;
 			camFollow.y += dad.cameraPosition[1] + opponentCameraOffset[1] + addY;
@@ -3836,6 +3857,7 @@ class PlayState extends MusicBeatState
 		}
 		else
 		{
+			if (ClientPrefs.hideBf) return;
 			camFollow.set(boyfriend.getMidpoint().x - 100, boyfriend.getMidpoint().y - 100);
 			camFollow.x -= boyfriend.cameraPosition[0] - boyfriendCameraOffset[0] - addX;
 			camFollow.y += boyfriend.cameraPosition[1] + boyfriendCameraOffset[1] + addY;
@@ -4599,7 +4621,7 @@ class PlayState extends MusicBeatState
 		var char:Character = opponentPlay ? boyfriend : dad;
 		if (note.gfNote) char = gf;
 		var animToPlay:String = singAnimations[Std.int(Math.abs(note.noteData))];
-		if (!SONG.notes[curSection].mustHitSection) moveCamera(!opponentPlay, animToPlay);
+		if (!SONG.notes[curSection].mustHitSection || ClientPrefs.hideBf) moveCamera(!opponentPlay, animToPlay);
 		if(note.noteType == 'Hey!' && char.animOffsets.exists('hey')) {
 			char.playAnim('hey', true);
 			char.specialAnim = true;
@@ -4701,7 +4723,7 @@ class PlayState extends MusicBeatState
 			healthDrained -= note.hitHealth * healthGain;
 
 			var animToPlay:String = singAnimations[Std.int(Math.abs(note.noteData))];
-			if (SONG.notes[curSection].mustHitSection) moveCamera(opponentPlay, animToPlay);
+			if (SONG.notes[curSection].mustHitSection || ClientPrefs.hideOpponent) moveCamera(opponentPlay, animToPlay);
 			if(!note.noAnimation) {
 
 				/*if(note.gfNote)
@@ -4972,6 +4994,7 @@ class PlayState extends MusicBeatState
 	}
 
 	override function destroy() {
+		ClientPrefs.lowQuality = oldLQ;
 		for (lua in luaArray) {
 			lua.call('onDestroy', []);
 			lua.stop();
@@ -5258,6 +5281,13 @@ class PlayState extends MusicBeatState
 		setOnLuas('ratingFC', ratingFC);
 	}
 
+	public function switchObjectState(object:FlxBasic, newState:Bool):Void {
+		FlxTween.tween(object, {alpha: newState ? 1 : 0}, Conductor.crochet / 1000, { ease: FlxEase.cubeInOut, onComplete: function(twn:FlxTween) {
+			object.visible = newState;
+			object.active = newState;
+		}});
+	}
+
 	#if ACHIEVEMENTS_ALLOWED
 	private function checkForAchievement(achievesToCheck:Array<String> = null):String
 	{
diff --git a/source/options/GraphicsSettingsSubState.hx b/source/options/GraphicsSettingsSubState.hx
index ce0c0de..8c46da9 100644
--- a/source/options/GraphicsSettingsSubState.hx
+++ b/source/options/GraphicsSettingsSubState.hx
@@ -53,6 +53,34 @@ class GraphicsSettingsSubState extends BaseOptionsMenu
 		option.onChange = onChangeAntiAliasing; //Changing onChange is only needed if you want to make a special interaction after it changes the value
 		addOption(option);
 
+		var option:Option = new Option('Hide All Non-Character Sprites',
+			'If checked, all non-character sprites will be hidden, giving a massive performance boost\nYou can still hide characters individually below',
+			'hideAllSprites',
+			'bool',
+			false);
+		addOption(option);
+
+		var option:Option = new Option('Hide Opponent',
+			'If checked, the Opponent will be hidden, giving a slight performance boost',
+			'hideOpponent',
+			'bool',
+			false);
+		addOption(option);
+
+		var option:Option = new Option('Hide Girlfriend',
+			'If checked, Girlfriend will be hidden, giving a slight performance boost',
+			'hideGf',
+			'bool',
+			false);
+		addOption(option);
+
+		var option:Option = new Option('Hide Boyfriend',
+			'If checked, Boyfriend will be hidden, giving a slight performance boost',
+			'hideBf',
+			'bool',
+			false);
+		addOption(option);
+
 		#if !html5 //Apparently other framerates isn't correctly supported on Browser? Probably it has some V-Sync shit enabled by default, idk
 		var option:Option = new Option('Framerate',
 			"Pretty self explanatory, isn't it?",
-- 
2.34.1.windows.1

